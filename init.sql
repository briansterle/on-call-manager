CREATE SCHEMA IF NOT EXISTS OCM;

CREATE TABLE IF NOT EXISTS OCM.PRIESTS (
    ID SERIAL PRIMARY KEY,
    NAME VARCHAR(100) NOT NULL
    -- Add other priest fields as needed
);

CREATE TABLE IF NOT EXISTS OCM.ACTIVE_CALLS (
    ID SERIAL PRIMARY KEY,
    ADDRESS VARCHAR(255) NOT NULL,
    PATIENT_NAME VARCHAR(100),
    OPEN_TS TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CLOSED_TS TIMESTAMP,
    UPD_TS TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    RESPONDER_ID INTEGER,
    STATUS VARCHAR(10) CHECK (STATUS IN ('OPEN', 'RESPONDING', 'CLOSED')) DEFAULT 'OPEN',
    NOTES TEXT,
    FOREIGN KEY (RESPONDER_ID) REFERENCES OCM.PRIESTS(ID)
);

CREATE TABLE IF NOT EXISTS OCM.ON_CALL (
    ID SERIAL PRIMARY KEY,
    PRIEST_ID INTEGER NOT NULL,
    START_TIME TIMESTAMP NOT NULL,
    END_TIME TIMESTAMP NOT NULL,
    CREATED_TS TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPD_TS TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    STATUS VARCHAR(10) CHECK (STATUS IN ('SCHEDULED', 'ACTIVE', 'COMPLETED')) DEFAULT 'SCHEDULED',
    FOREIGN KEY (PRIEST_ID) REFERENCES OCM.PRIESTS(ID)
);

-- Function to update UPD_TS
CREATE OR REPLACE FUNCTION update_upd_ts()
RETURNS TRIGGER AS $$
BEGIN
    NEW.UPD_TS = CURRENT_TIMESTAMP;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- Triggers to update UPD_TS
CREATE OR REPLACE TRIGGER update_active_calls_upd_ts
BEFORE UPDATE ON OCM.ACTIVE_CALLS
FOR EACH ROW EXECUTE FUNCTION update_upd_ts();

CREATE OR REPLACE TRIGGER update_on_call_upd_ts
BEFORE UPDATE ON OCM.ON_CALL
FOR EACH ROW EXECUTE FUNCTION update_upd_ts();


-- Clear existing data
TRUNCATE OCM.ON_CALL CASCADE;
TRUNCATE OCM.ACTIVE_CALLS CASCADE;
TRUNCATE OCM.PRIESTS CASCADE;

-- Reset the sequences for SERIAL columns
ALTER SEQUENCE OCM.PRIESTS_ID_SEQ RESTART WITH 1;
ALTER SEQUENCE OCM.ACTIVE_CALLS_ID_SEQ RESTART WITH 1;
ALTER SEQUENCE OCM.ON_CALL_ID_SEQ RESTART WITH 1;


-- Insert sample data into OCM.PRIESTS
INSERT INTO OCM.PRIESTS (NAME) VALUES
('Father John Smith'),
('Father Michael Johnson'),
('Father David Williams'),
('Father Robert Brown'),
('Father James Davis');

-- Insert sample data into OCM.ACTIVE_CALLS
INSERT INTO OCM.ACTIVE_CALLS (ADDRESS, PATIENT_NAME, OPEN_TS, CLOSED_TS, RESPONDER_ID, STATUS, NOTES) VALUES
('123 Main St, Cityville', 'Alice Johnson', CURRENT_TIMESTAMP - INTERVAL '2 hours', NULL, 1, 'RESPONDING', 'Patient requesting last rites'),
-- ('456 Elm St, Townsburg', 'Bob Smith', CURRENT_TIMESTAMP - INTERVAL '1 day', CURRENT_TIMESTAMP - INTERVAL '23 hours', 2, 'CLOSED', 'Administered sacrament of the sick'),
-- ('789 Oak Ave, Villageton', 'Carol Davis', CURRENT_TIMESTAMP - INTERVAL '30 minutes', NULL, 3, 'OPEN', 'Family requesting priest for blessing'),
-- ('321 Pine Rd, Hamletville', 'David Brown', CURRENT_TIMESTAMP - INTERVAL '4 hours', NULL, 4, 'RESPONDING', 'Emergency call from hospital'),
('654 Maple Ln, Boroughburg', 'Eve Wilson', CURRENT_TIMESTAMP - INTERVAL '15 minutes', NULL, NULL, 'OPEN', 'New call, awaiting responder');

-- Insert sample data into OCM.ON_CALL
INSERT INTO OCM.ON_CALL (PRIEST_ID, START_TIME, END_TIME, STATUS) VALUES
(1, CURRENT_DATE + INTERVAL '8 hours', CURRENT_DATE + INTERVAL '20 hours', 'SCHEDULED'),
(2, CURRENT_DATE - INTERVAL '1 day' + INTERVAL '8 hours', CURRENT_DATE - INTERVAL '1 day' + INTERVAL '20 hours', 'COMPLETED'),
(3, CURRENT_TIMESTAMP - INTERVAL '2 hours', CURRENT_TIMESTAMP + INTERVAL '10 hours', 'ACTIVE'),
(4, CURRENT_DATE + INTERVAL '1 day' + INTERVAL '8 hours', CURRENT_DATE + INTERVAL '1 day' + INTERVAL '20 hours', 'SCHEDULED'),
(5, CURRENT_DATE + INTERVAL '2 days' + INTERVAL '8 hours', CURRENT_DATE + INTERVAL '2 days' + INTERVAL '20 hours', 'SCHEDULED');


